C51 COMPILER V9.54   EEPROM24C                                                             02/26/2016 09:54:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EEPROM24C
OBJECT MODULE PLACED IN .\Objects\EEPROM24C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EEPROM24C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\EEPROM24C.lst) OBJECT(.\Objects\EEPROM24C.obj)

line level    source

   1          /*
   2          *Copyright Lexsion
   3          *All rights reserved
   4          *
   5          *文件名称：EEPROM24C.c 
   6          *摘要：EEPROM24C函数
   7          *
   8          *当前版本：0.4
   9          *作者：Lexsion
  10          *完成日期：2016年02月16日
  11          *
  12          *上次版本：0.3
  13          *作者：Lexsion
  14          *完成日期：2016年02月13日
  15          *
  16          *取代版本：0.3
  17          *作者：Lexsion
  18          *
  19          */
  20          
  21          #include"EEPROM24C.h"
  22          
  23          
  24          /*
  25          *函数名：I2C_Delay5Us
  26          *函数功能：I2C延时函数
  27          *输入：__
  28          *输出：__
  29          */
  30          #ifndef MCU_Speed24M
  31          void I2C_Delay5Us()    //@12.000MHz     
  32          {
  33   1              _nop_();
  34   1              _nop_();
  35   1              _nop_();
  36   1      }
  37          void Delay10ms()                //@12.000MHz
  38          {
  39   1              unsigned char i, j;
  40   1      
  41   1              i = 20;
  42   1              j = 113;
  43   1              do
  44   1              {
  45   2                      while (--j);
  46   2              } while (--i);
  47   1      }
  48          #else
              void I2C_Delay5Us()             //@24.000MHz
              {
                      unsigned char i;
              
                      _nop_();
                      i = 2;
C51 COMPILER V9.54   EEPROM24C                                                             02/26/2016 09:54:09 PAGE 2   

                      while (--i);
              }
              void Delay10ms()                //@24.000MHz
              {
                      unsigned char i, j;
              
                      i = 39;
                      j = 230;
                      do
                      {
                              while (--j);
                      } while (--i);
              }
              
              #endif
  70          
  71          /*
  72          *函数名：I2C_Start
  73          *函数功能：I2C总线起始信号,在SCL时钟信号在高电平期间SDA信号产生一个下降沿
  74          *输入：__
  75          *输出：__
  76          *注：起始信号后，SDA和SCL都为0，表示总线被使用。
  77          */
  78          void I2C_Start()
  79          {
  80   1              I2C_SDA = 1;
  81   1              I2C_Delay5Us();
  82   1              I2C_SCL = 1;
  83   1              I2C_Delay5Us();
  84   1              I2C_SDA = 0;
  85   1              I2C_Delay5Us();
  86   1              I2C_SCL = 0;
  87   1              I2C_Delay5Us();
  88   1      }
  89          /*
  90          *函数名：I2C_Stop
  91          *函数功能：I2C总线终止信号,在SCL时钟信号在高电平期间SDA信号产生一个上升沿
  92          *输入：__
  93          *输出：__
  94          *注：终止信号后，SDA和SCL都为1，表示总线空闲。
  95          */
  96          void I2C_Stop()
  97          {
  98   1              I2C_SDA = 0;
  99   1              I2C_Delay5Us();
 100   1              I2C_SCL = 1;
 101   1              I2C_Delay5Us();
 102   1              I2C_SDA = 1;
 103   1              I2C_Delay5Us();
 104   1      }
 105          /*
 106          *函数名：I2C_SendByte
 107          *函数功能：通过I2C总线发送一个字节数据
 108          *输入：dat
 109          *输出：应答返回1，非应答返回0。
 110          *注：发送字节结束后，I2C_SCL=0,I2C_SDA=1
 111          */
 112          unsigned char I2C_SendByte(unsigned char dat)
 113          {
 114   1              unsigned char a;
 115   1              unsigned char b = 0;//用于等待应答信号的延时
 116   1              for(a = 0; a < 8; a++)   //for循环发送8位数据，起始位为dat的高位
C51 COMPILER V9.54   EEPROM24C                                                             02/26/2016 09:54:09 PAGE 3   

 117   1              {
 118   2                      I2C_SDA = dat >> 7;   //dat右移7位的结果为最高位（MSB），将结果送至I2C_SDA
 119   2                      dat = dat << 1;   //dat左移一位，次高位顶替最高位，为下一次循环做准备
 120   2                      I2C_Delay5Us();   //延时等待稳定
 121   2                      I2C_SCL = 1;    
 122   2                      I2C_Delay5Us();   //根据I2C协议延时
 123   2                      I2C_SCL = 0;    //SCL低电平，为下次SDA电平变换做准备
 124   2                      I2C_Delay5Us();   //延时稳定
 125   2              }
 126   1              I2C_SDA = 1;   //释放SDA
 127   1              I2C_Delay5Us(); //延时等待
 128   1              I2C_SCL = 1;   
 129   1              while(I2C_SDA)    //检查接收方（Receiver）是否应答（SDA = 0）
 130   1              {
 131   2                      b++;
 132   2                      if(b > 200)
 133   2                      {
 134   3                              I2C_SCL = 0;
 135   3                              I2C_Delay5Us();
 136   3                              return 0;   //接收方非应答？
 137   3                      }
 138   2              }
 139   1              I2C_SCL = 0;
 140   1              I2C_Delay5Us();
 141   1              return 1;   //接收方应答
 142   1      }
 143          /*
 144          *函数名：I2C_ReceiveByte
 145          *函数功能：通过I2C总线接收一个字节数据
 146          *输入：--
 147          *输出：dat
 148          *注：接收字节结束后，I2C_SCL=0,I2C_SDA=1
 149          */
 150          unsigned char I2C_ReceiveByte()
 151          {
 152   1              unsigned char i,dat = 0;   //定义循环变量i和输出变量dat
 153   1      //      I2C_SCL = 0;
 154   1      //      I2C_Delay5Us();
 155   1              I2C_SDA = 1;   //确保SDA被释放
 156   1              I2C_Delay5Us();
 157   1              for(i = 0; i < 8; i++)  //通过for循环接收一个字节(8位)数据,存入dat
 158   1              {
 159   2                      I2C_SCL = 1;
 160   2                      I2C_Delay5Us();
 161   2                      dat <<= 1;
 162   2                      dat |= I2C_SDA;
 163   2                      I2C_Delay5Us();
 164   2                      I2C_SCL = 0;
 165   2                      I2C_Delay5Us();
 166   2              }
 167   1              return dat;   //输出dat
 168   1      }
 169          /*
 170          *函数名：I2C_Respon
 171          *函数功能：接收一个字节数据后产生应答，以便接受下一个字节
 172          *输入：--
 173          *输出：--
 174          *注：应答结束后I2C_SCL=0,I2C_SDA=1
 175          */
 176          void I2C_Respon()
 177          {
 178   1              I2C_SDA = 0;
C51 COMPILER V9.54   EEPROM24C                                                             02/26/2016 09:54:09 PAGE 4   

 179   1              I2C_Delay5Us();   //I2C_SDA保持5us低电平
 180   1              I2C_SCL = 1;
 181   1              I2C_Delay5Us();   //IC_SCL保持5us高电平
 182   1              I2C_SCL = 0;
 183   1              I2C_Delay5Us();   //拉低I2C_SCL
 184   1              I2C_SDA = 1;
 185   1              I2C_Delay5Us();   //释放I2C_SDA
 186   1      }
 187          /*
 188          *函数名：I2C_ByteWrite
 189          *函数功能：向设备dadr的addr地址处写入byte
 190          *输入：dadr,addr,byte
 191          *输出：--
 192          */
 193          void I2C_ByteWrite(unsigned char dadr,addr,byte)
 194          {
 195   1              I2C_Start();
 196   1              I2C_SendByte(dadr);
 197   1              I2C_SendByte(addr);
 198   1              I2C_SendByte(byte);
 199   1              I2C_Stop();
 200   1              Delay10ms();   //延时等待写入，Write Cycle Time=10ms
 201   1      }
 202          /*
 203          *函数名：I2C_ByteRead
 204          *函数功能：将设备dadr的addr地址处数据读出
 205          *输入：dadr,addr
 206          *输出：dat
 207          */
 208          unsigned char I2C_ByteRead(unsigned char dadr,addr)
 209          {
 210   1              unsigned char dat;
 211   1              I2C_Start();
 212   1              I2C_SendByte(dadr);
 213   1              I2C_SendByte(addr);
 214   1              I2C_Start();
 215   1              I2C_SendByte(dadr | 0x01);
 216   1              //I2C_Delay5Us(); 
 217   1              dat = I2C_ReceiveByte();
 218   1              I2C_Stop();
 219   1              return dat;
 220   1      }
 221          /*
 222          *函数名：I2C_ImByteRead
 223          *函数功能：将设备dadr的当前地址处数据读出
 224          *输入：dadr
 225          *输出：dat
 226          */
 227          unsigned char I2C_ImByteRead(unsigned char dadr)
 228          {
 229   1              unsigned char dat;
 230   1              I2C_Start();
 231   1              I2C_SendByte(dadr | 0x01);
 232   1              dat = I2C_ReceiveByte();
 233   1              I2C_Stop();
 234   1              return dat;
 235   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    209    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   EEPROM24C                                                             02/26/2016 09:54:09 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
